swagger: '2.0'
info:
  title: MSRC Engage API
  version: '1.0'
host: api.msrc.microsoft.com
basePath: /engage
schemes:
  - https
securityDefinitions:
  apiKeyHeader:
    type: apiKey
    name: api-key
    in: header
  apiKeyQuery:
    type: apiKey
    name: subscription-key
    in: query
security:
  - apiKeyHeader: []
  - apiKeyQuery: []
paths:
  /pentest:
    post:
      description: >-
        An API for submitting Azure Service customer-driven penetration testing
        notifications in a derivative of the CARS (Cloud Abuse Reporting Schema)
        as JSON
      operationId: Pentest Notification
      parameters:
        - name: bodyTwo
          in: body
          schema:
            $ref: '#/definitions/BodyTwo'
      consumes:
        - application/json
      responses: {}
  /cars:
    post:
      description: >-
        An API for submitting Abuse or CERT reports in the CARS (Cloud Abuse
        Reporting Schema) as JSON
      operationId: CERT Report
      parameters:
        - name: Content-Type
          in: header
          description: Media type of the body sent to the API.
          required: true
          type: string
          enum:
            - application/json
        - name: ''
          in: body
          schema:
            example: >-
              @ECHO OFF curl -v -X POST
              "https://api.msrc.microsoft.com/engage/cars" -H "Content-Type:
              application/json" -H "api-key: {subscription key}" --data-ascii
              "{body}" 
          description: Cloud Abuse Reporting Schema
      consumes:
        - application/json
        - curl
      responses: {}
  /ssi:
    post:
      description: Report Service Security Issues (SSI)
      operationId: SSI
      parameters:
        - name: Content-Type
          in: header
          description: Additional header
          type: string
          enum:
            - application/json
        - name: Cache-Control
          in: header
          description: Disable caching
          type: string
          default: no-cache
          enum:
            - no-cache
        - name: Ocp-Apim-Trace
          in: header
          description: Enable request tracing
          type: string
          enum:
            - 'true'
        - name: api-key
          in: header
          description: Subscription key
          type: string
          default: ' *******************'
          enum:
            - ' *******************'
        - name: bodyThree
          in: body
          schema:
            $ref: '#/definitions/BodyThree'
      consumes:
        - application/json
      responses: {}
definitions:
  Body:
    example: |-
      {
        "reporterInfo": {
        "reporterEmail": "yourEmail@yourOrg.com",
        "reporterName": "yourName",
        "reporterPhone": "yourPhone",
        "reporterOrg": "yourOrganization",
        "discloseEmail": "Choose either true or false to allow microsoft to disclose your email in reports",
        "reporterNotes": "List any notes that are relivant about you in terms of a reporter."
        },
        "reports": [
          {
            "report": {
            "reportNotes": "List any reports about your specific report",
            "TLP": "Choose a valid Traffic Light Protocol color to go here",
            "disclosureNotes": "List anything that you may need to disclose here",
            "threats": [
              {
                "threat": {
                 "threatType": "Identify which type the threat is here",
                 "threatSubType": "Identify which subtype the threat is here",
                 "sampleType": "Identify your sample type here",
                 "sourceIp": "Attacking IP",
                 "destinationIp": "Attacked IP",
                 "sourcePort": "Port attacked from",
                 "destinationPort": "Port attacked",
                 "sourceUrl": "Attacking URL",
                 "destinationUrl": "Attacked URL",
                 "protocol": "Attack protocol",
                 "byteCount": "Byte count of attack",
                 "packetCount": "Packet Count of attack",
                 "date": "Date of attack",
                 "time": "Time of attack",
                 "timeZone": "Your timezone",
                 "sample": "A sample of the attack"
                }
              }
            ]
            }
          }
        ]
      } 
  BodyTwo:
    example: |-
      {
        "requesterInfo": {
          "contactEmail": "security@contoso.com",
          "contactName": "Ben",
          "contactPhone": "555-555-5555"
        },
        "subscriptionInfo": {
          "subscriptionId": "00000000-0000-0000-0000-000000000000",
          "subscriptionAdminEmail": "admin@contoso.com"
        },
        "testInfo": {
          "startDate": "2000-01-25",
          "endDate": "2020-01-25",
          "testerIps": [
              "0.0.0.0"
            ],
          "testerDnsNames": [
              "pentestplatform.url"
            ],
          "testDescription": "Description of overall pentest"
        },
        "azureAssets": [
          {
            "azureAsset": {
                "assetType": "WEBSITE||VIRTUAL MACHINE||SQL AZURE DB||CLOUD SERVICE",
                "dnsName": "targetasset.cloudapp.net",
                "testDescription": "vulnerability scan of the cloudapp asset",
                "toolingDescription": "pentest tool x"
              }
          }
        ],
        "pentestAcks": {
          "standardTests": "TRUE",
          "agreeToTerms": "TRUE",
          "noProhibTests": "TRUE"
        }
      }
  BodyThree:
    example: >-
      { "reporterInfo": { "reporterEmail": "yourName@youremail.com",
      "reporterName": "yourName", "reporterPhone": "yourPhone", "reporterOrg":
      "yourOrg", "discloseEmail": "TRUE", "reporterNotes": "notesAboutYou"   }, 
      "issues": [ {  "issue": { "batchID": "issueBatchID", "relatedCases":
      "anyRelatedCases", "issueType": "injection", "issueNotes":
      "notesAboutIssue", "sampleType": "sampleType", "url": "url.com", "sample":
      "yourSample", "piiPresent": "TRUE", "piiDescription": "PIIDescription",
      "publiclyKnown": "TRUE", "publicUrl": "publicUrl.com", "isWebApp": "TRUE"
      } } ] }
